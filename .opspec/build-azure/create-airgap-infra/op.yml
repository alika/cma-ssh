name: build-azure/create-airgap-infra
description: create 3 test nodes in azure for airgap environment
inputs:
  subscriptionId:
    string:
      constraints: { minLength: 1 }
      description: id of azure subscription
  loginId:
    string:
      constraints: { minLength: 1 }
      description: id of user, service principal, or app to login with
  loginSecret:
    string:
      constraints: { minLength: 1 }
      description: secret of user, service principal, or app to login with
      isSecret: true
  name:
    string:
      constraints: { minLength: 1 }
      description: name of the api management service
  location:
    string:
      constraints: { minLength: 1 }
      description: location of the api management service
      default: westus
  loginType:
    string:
      constraints: { minLength: 1 }
      default: sp
  loginTenantId:
    string:
      constraints: { minLength: 1 }
  sshKeyValue:
    file:
      description: ssh public key value for provisioned vm
  sshPrivateKey:
    file:
      description: ssh private key for provisioned vm
  dockerConfigs:
    dir:
      description: docker config files
      default: /docker-configs
  centosImageVersion:
    string:
      constraints: { minLength: 1 }
      description: version of centos to install (format publisher:Offer:Sku:Version)
      default: OpenLogic:CentOS:7.4:latest
  rootPassword:
    string:
      constraints: { minLength: 1 }
      description: vm root password
      isSecret: true
outputs:
  controlPlaneIP:
    string:
      description: public ip address of control plane
  nodeIP:
    string:
      description: public ip address of node
  proxyIP:
    string:
      description: public ip of proxy
version: 0.0.1
run:
  serial:
    - container:
        image: { ref: 'azuresdk/azure-cli-python:rc2.0.52' }
        cmd: [ /cmd.sh ]
        files:
          /cmd.sh:
          /sshKeyValue: $(sshKeyValue)
          /privateKey: $(sshPrivateKey)
          /controlPlaneIP: $(controlPlaneIP)
          /nodeIP: $(nodeIP)
          /proxyIP: $(proxyIP)
        envVars:
          subscriptionId:
          loginId:
          loginSecret:
          loginTenantId:
          loginType:
          resourceGroup: $(name)-group
          name:
          image: $(centosImageVersion)
          adminUsername: centos
    - container:
        image: { ref: 'azuresdk/azure-cli-python:rc2.0.52' }
        cmd: [ /enable-root.sh ]
        dirs:
          /docker-configs: $(dockerConfigs)
        files:
          /enable-root.sh:
          /privateKey: $(sshPrivateKey)
        envVars:
          subscriptionId:
          loginId:
          loginSecret:
          loginTenantId:
          loginType:
          resourceGroup: $(name)-group
          name:
          rootPassword:
    - container:
        image: { ref: 'azuresdk/azure-cli-python:rc2.0.52' }
        cmd: [ /setup-docker.sh ]
        dirs:
          /docker-configs: $(dockerConfigs)
        files:
          /setup-docker.sh:
          /privateKey: $(sshPrivateKey)
        envVars:
          subscriptionId:
          loginId:
          loginSecret:
          loginTenantId:
          loginType:
          resourceGroup: $(name)-group
          name:

{
  "swagger": "2.0",
  "info": {
    "title": "Cluster Manager API SSH provider",
    "version": "v0.1.0",
    "contact": {
      "name": "Samsung CNCT",
      "url": "https://github.com/samsung-cnct/ims-kaas",
      "email": "samsung.cloudnative@gmail.com"
    }
  },
  "schemes": [
    "https",
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/cluster": {
      "get": {
        "summary": "Will retrieve the status of a cluster and its kubeconfig for connectivity",
        "operationId": "GetCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "Name of the cluster to be looked up.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "delete": {
        "summary": "Will delete a cluster",
        "operationId": "DeleteCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiDeleteClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "What is the cluster's name to destroy.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "post": {
        "summary": "Will provision a cluster",
        "operationId": "CreateCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/list": {
      "get": {
        "summary": "Will retrieve a list of clusters",
        "operationId": "GetClusterList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetClusterListReply"
            }
          }
        },
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/nodesstatus": {
      "get": {
        "summary": "Will get cluster nodes status for a provisioned cluster",
        "operationId": "GetClusterNodesStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetClusterNodesStatusReply"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "What is the name of the Cluster to query.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/pool": {
      "delete": {
        "summary": "Will delete a node pool from a provisioned cluster",
        "operationId": "DeleteNodePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiDeleteNodePoolReply"
            }
          }
        },
        "parameters": [
          {
            "name": "clusterName",
            "description": "What is the cluster to delete node pools.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "node_pool_names",
            "description": "What is the node pool names to delete.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "post": {
        "summary": "Will add node pool to a provisioned cluster",
        "operationId": "AddNodePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiAddNodePoolReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiAddNodePoolMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will scale the number of machines in a node pool for a provisioned cluster",
        "operationId": "ScaleNodePool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiScaleNodePoolReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiScaleNodePoolMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/cluster/upgrade": {
      "get": {
        "summary": "Will return upgrade options for a given cluster",
        "operationId": "GetUpgradeClusterInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetUpgradeClusterInformationReply"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "What is the cluster that we are considering for upgrade.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Cluster"
        ]
      },
      "put": {
        "summary": "Will attempt to upgrade a cluster",
        "operationId": "UpgradeCluster",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiUpgradeClusterReply"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpgradeClusterMsg"
            }
          }
        ],
        "tags": [
          "Cluster"
        ]
      }
    },
    "/api/v1/version": {
      "get": {
        "summary": "Will return version information about api server",
        "operationId": "GetVersionInformation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetVersionReply"
            }
          }
        },
        "tags": [
          "Cluster"
        ]
      }
    }
  },
  "definitions": {
    "GetClusterNodesStatusReplyMachineStatus": {
      "type": "object",
      "properties": {
        "k8sNodeStatus": {
          "type": "string",
          "title": "Node k8s status"
        },
        "k8sVersion": {
          "type": "string",
          "title": "Kubernetes Version"
        },
        "maasSystemId": {
          "type": "string",
          "title": "MaaS Node system_id"
        },
        "maasHostname": {
          "type": "string",
          "title": "MaaS Node hostname"
        },
        "maasNodeStatus": {
          "type": "string",
          "title": "MaaS node status"
        },
        "maasIPAddr": {
          "type": "string",
          "title": "MaaS IP Address"
        }
      },
      "title": "The status of a machine"
    },
    "GetVersionReplyVersionInformation": {
      "type": "object",
      "properties": {
        "git_version": {
          "type": "string",
          "title": "The tag on the git repository"
        },
        "git_commit": {
          "type": "string",
          "title": "The hash of the git commit"
        },
        "git_tree_state": {
          "type": "string",
          "title": "Whether or not the tree was clean when built"
        },
        "build_date": {
          "type": "string",
          "title": "Date of build"
        },
        "go_version": {
          "type": "string",
          "title": "Version of go used to compile"
        },
        "compiler": {
          "type": "string",
          "title": "Compiler used"
        },
        "platform": {
          "type": "string",
          "title": "Platform it was compiled for / running on"
        }
      }
    },
    "apiAddNodePoolMsg": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "What is the cluster to add node pools to"
        },
        "worker_node_pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiMachineSpec"
          },
          "title": "What Machines to add to the cluster"
        }
      }
    },
    "apiAddNodePoolReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the node pool was provisioned by this request"
        }
      }
    },
    "apiClusterDetailItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status_message": {
          "type": "string",
          "title": "Additional information about the status of the cluster"
        },
        "kubeconfig": {
          "type": "string",
          "title": "What is the kubeconfig to connect to the cluster"
        },
        "status": {
          "$ref": "#/definitions/apiClusterStatus",
          "title": "The status of the cluster"
        }
      }
    },
    "apiClusterItem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster"
        },
        "status_message": {
          "type": "string",
          "title": "Additional information about the status of the cluster"
        },
        "status": {
          "$ref": "#/definitions/apiClusterStatus",
          "title": "The status of the cluster"
        }
      }
    },
    "apiClusterStatus": {
      "type": "string",
      "enum": [
        "STATUS_UNSPECIFIED",
        "PROVISIONING",
        "RUNNING",
        "RECONCILING",
        "STOPPING",
        "ERROR",
        "DEGRADED"
      ],
      "default": "STATUS_UNSPECIFIED",
      "description": "ClusterStatus\nSpecifies current cluster state.\n\n - STATUS_UNSPECIFIED: Not set\n - PROVISIONING: The cluster is being created.\n - RUNNING: The cluster has been created and is fully usable.\n - RECONCILING: Some work is actively being done on the cluster, such as upgrading the master or node software.\n - STOPPING: The cluster is being deleted\n - ERROR: The cluster may be unusable\n - DEGRADED: The cluster requires user action to restore full functionality"
    },
    "apiControlPlaneMachineSpec": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiKubernetesLabel"
          },
          "title": "The labels for the control plane machines"
        },
        "instanceType": {
          "type": "string",
          "title": "Type of machines to provision (standard or gpu)"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "The number of machines"
        }
      },
      "title": "The specification for a set of control plane machines"
    },
    "apiCreateClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "Name of the cluster to be provisioned"
        },
        "k8s_version": {
          "type": "string",
          "description": "The version of Kubernetes for worker nodes. Control plane versions are determined by the MachineSpec."
        },
        "control_plane_nodes": {
          "$ref": "#/definitions/apiControlPlaneMachineSpec",
          "title": "Machines which comprise the cluster control plane"
        },
        "worker_node_pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiMachineSpec"
          },
          "title": "Machines which comprise the cluster"
        }
      },
      "title": "CreateClusterMsg"
    },
    "apiCreateClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Whether or not the cluster was provisioned by this request"
        },
        "cluster": {
          "$ref": "#/definitions/apiClusterItem",
          "title": "The details of the cluster request response"
        }
      }
    },
    "apiDeleteClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Could the cluster be destroyed"
        },
        "status": {
          "type": "string",
          "title": "Status of the request"
        }
      }
    },
    "apiDeleteNodePoolReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "apiGetClusterListReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiClusterItem"
          },
          "title": "List of clusters"
        }
      }
    },
    "apiGetClusterNodesStatusReply": {
      "type": "object",
      "properties": {
        "Name": {
          "type": "string",
          "title": "The name of the cluster"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Count of machines in cluster"
        },
        "machines": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GetClusterNodesStatusReplyMachineStatus"
          },
          "title": "Gets list of nodes in a cluster"
        }
      },
      "title": "GetClusterNodesStatusReply is the response to GetNodePool\nor cluster machines status"
    },
    "apiGetClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Is the cluster in the system"
        },
        "cluster": {
          "$ref": "#/definitions/apiClusterDetailItem"
        }
      }
    },
    "apiGetUpgradeClusterInformationReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Can the cluster be upgraded"
        },
        "versions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "title": "What versions are possible right now"
        }
      }
    },
    "apiGetVersionReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "If operation was OK"
        },
        "version_information": {
          "$ref": "#/definitions/GetVersionReplyVersionInformation",
          "title": "Version Information"
        }
      },
      "title": "Reply for version request"
    },
    "apiKubernetesLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of a label"
        },
        "value": {
          "type": "string",
          "title": "The value of a label"
        }
      }
    },
    "apiMachineSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The name of the machine set"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiKubernetesLabel"
          },
          "title": "The labels for the machine set"
        },
        "instanceType": {
          "type": "string",
          "title": "Type of machines to provision (standard or gpu)"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "The number of machines"
        }
      },
      "title": "The specification for a set of machines"
    },
    "apiScaleNodePoolMsg": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string",
          "title": "What is the name of the cluster to scale a node pool"
        },
        "node_pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiScaleNodePoolSpec"
          },
          "title": "What node pools to scale"
        }
      }
    },
    "apiScaleNodePoolReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    },
    "apiScaleNodePoolSpec": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the node pool name to scale"
        },
        "count": {
          "type": "integer",
          "format": "int32",
          "title": "Number of machines to scale"
        }
      }
    },
    "apiUpgradeClusterMsg": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "What is the cluster that we are considering for upgrade"
        },
        "version": {
          "type": "string",
          "title": "What version are we upgrading to?"
        }
      }
    },
    "apiUpgradeClusterReply": {
      "type": "object",
      "properties": {
        "ok": {
          "type": "boolean",
          "format": "boolean",
          "title": "Was this a successful request"
        }
      }
    }
  },
  "externalDocs": {
    "description": "More about Cluster Manager API SSH provider",
    "url": "https://github.com/samsung-cnct/ims-kaas"
  }
}
